@model tracker.Models.TournamentScore

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-xs-12">
        <h2>Edit <small>tournament score</small></h2>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TournamentScoresID)

                <div class="form-group">
                    @Html.LabelFor(model => model.TournamentID, "TournamentID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TournamentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TournamentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlayerID, "PlayerID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PlayerID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PlayerID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PointsFor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PointsFor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PointsFor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PointsAgainst, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PointsAgainst, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PointsAgainst, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LeagueID, "LeagueID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LeagueID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LeagueID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        @Html.ActionLink("Back to " + Model.Tournament.TournamentName, "Details", "Tournaments", new { id = Model.TournamentID }, null)
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
