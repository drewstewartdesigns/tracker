@using PagedList.Mvc
@model PagedList.IPagedList<tracker.ViewModels.TournamentsViewModel>

@{
    ViewBag.Title = "Relentless Ones 0.5 Tournaments";
}

<div class="row">
    <div class="col-xs-12">
        <h2><small>Relentless Ones 0.5</small></h2>
        <h1>Tournaments <span class="pull-right">@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })</span></h1>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <table class="table table-striped">
            <tr>
                <th>
                   Rank
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().TournamentName)
                </th>
                <th class="text-center">
                    Outcome
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td style="vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.Rank)
                    </td>
                    <td style="vertical-align: middle;">
                        @Html.ActionLink(item.TournamentName, "Details", new { id = item.TournamentID })
                    </td>
                    <td class="text-center @(item.TotalPointsFor > item.TotalPointsAgainst ? "success" : "danger")" style="vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.TotalPointsFor) - @Html.DisplayFor(modelItem => item.TotalPointsAgainst)
                    </td>
                    <td class="text-right">
                        @Html.ActionLink("Add Scores", "Create", "TournamentScores", new { id = item.TournamentID }, new { @class = "btn btn-sm btn-success" })
                        @Html.ActionLink("Edit", "Edit", new { id = item.TournamentID }, new { @class = "btn btn-sm btn-default" })
                    </td>
                </tr>
            }

        </table>
    </div>
    <div class="col-xs-12">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
</div>



