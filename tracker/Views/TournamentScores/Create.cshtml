@model tracker.Models.TournamentScore

@{
    ViewBag.Title = "Add Tournament Score";
}

<div class="row">
    <div class="col-xs-12">
        <h2>Create <small>tournament score</small></h2>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TournamentID, "Tournament Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TournamentID", null, htmlAttributes: new { @class = "form-control", @disabled = true })
                        @Html.ValidationMessageFor(model => model.TournamentID, "", new { @class = "text-danger" })
                        @Html.DropDownList("TournamentID", null, htmlAttributes: new { @class = "hidden" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlayerID, "Player Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PlayerID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PlayerID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PointsFor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PointsFor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PointsFor, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.DefenseAgainst, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DefenseAgainst, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DefenseAgainst, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="checkbox">
                        <div class="col-md-offset-2 col-md-10">
                            <label>
                                @{ var missedDrives = false; }
                                @Html.CheckBoxFor(model => @missedDrives, new { @type = "checkbox" }) Missed Drives
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PointsAgainst, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PointsAgainst, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PointsAgainst, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LeagueID, "League", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LeagueID", null, htmlAttributes: new { @class = "form-control", @disabled = true })
                        @Html.ValidationMessageFor(model => model.LeagueID, "", new { @class = "text-danger" })
                        @Html.DropDownList("LeagueID", null, htmlAttributes: new { @class = "hidden" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        @Html.ActionLink("Back to List", "Index", "Tournaments", null, new { @class = "btn btn-default" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
