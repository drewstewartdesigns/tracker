@model IEnumerable<tracker.ViewModels.RankingsViewModel>
@{
    ViewBag.Title = "Rankings";
}

<h2>Rankings</h2>

<div class="row">
    <div class="col-xs-12">
        <ul class="nav nav-tabs" style="margin-top: 40px;">
            <li role="presentation" class="active"><a href="#grade" data-toggle="tab">Grade</a></li>
            @*<li role="presentation"><a href="#power" data-toggle="tab">Power Rank</a></li>*@
            <li role="presentation"><a href="#fourteenDay" data-toggle="tab">14 Day</a></li>
            <li role="presentation"><a href="#twentyEightDay" data-toggle="tab">28 Day</a></li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="tab-content">
            <div class="tab-pane active" id="grade">
                <div class="row">
                    <div class="col-xs-12">
                        <div style="display: flex; padding: 10px 20px 0; background-color: #f9f9f9;">
                            <p style="margin-right: 20px;"><b>Ladder</b> <i>(formula)</i>:</p>
                            <p>(Points Scored * Opponents Defense) / 20 + Offense Rating</p>
                        </div>
                        <div style="display: flex; padding: 0 20px; background-color: #f9f9f9;">
                            <p style="margin-right: 20px;"><b>Ladder</b> <i>(explained)</i>:</p>
                            <p>
                                +1 to Ladder by either increasing Offense Rating by 1 point or increasing Opponents Defense
                                average by 1 pont.<br />+5 to Ladder by increasing your Points Scored by 1 point.
                            </p>
                        </div>
                        
                        <div style="display: flex; padding: 10px 20px 0;">
                            <p style="margin-right: 20px;"><b>Grade</b> <i>(formula)</i>:</p>
                            <p>((Points Scored * 580) / (195 - Opponents Defense)) - (Points Against * 1.4)</p>
                        </div>
                        <div style="display: flex; padding: 0 20px;">
                            <p style="margin-right: 20px;"><b>Grade</b> <i>(explained)</i>:</p>
                            <p>
                                Grade uses your defensive performance to show how much you are contributing to the league.
                            </p>
                        </div>
                    </div>
                </div>

                <table class="table table-striped">
                    <tr>
                        <th>
                        </th>
                        <th>
                            Player
                        </th>
                        <th>
                            Pts. Scored
                        </th>
                        <th>
                            Oppon. Def.
                        </th>
                        <th>
                            Pts. Allowed
                        </th>
                        <th>
                            @Html.ActionLink("Grade", "Rankings", new { sortOrder = ViewBag.GradeSortParam })
                        </th>
                        <th>
                            @Html.ActionLink("Ladder", "Rankings", new { sortOrder = ViewBag.LadderSortParam })
                        </th>
                    </tr>
                    @{ int gradeIndex = 1; }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @gradeIndex @{ gradeIndex++; }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @{ double pf = Math.Round(item.Average20PointsFor, 2); }
                                @pf
                            </td>
                            <td>
                                @{ double da = Math.Round(item.Average20DefenseAgainst, 2); }
                                @da
                            </td>
                            <td>
                                @{ double pa = Math.Round(item.Average20PointsAgainst, 2); }
                                @pa
                            </td>
                            <td>
                                @{ double gr = Math.Round(item.Grade, 2); }
                                @gr
                            </td>
                            <td>
                                @{ double pr = Math.Round(item.Ladder, 2); }
                                @pr
                            </td>
                        </tr>
                    }
                </table>
            </div>
            @*<div class="tab-pane" id="power">
                <table class="table table-striped">
                    <tr>
                        <th>
                        </th>
                        <th>
                            Player
                        </th>
                        <th>
                            Pts Scored
                        </th>
                        <th>
                            5x Avg.
                        </th>
                        <th>
                            Off. Ovr.
                        </th>
                        <th>
                            Ladder
                        </th>
                    </tr>
                    @{ int powerIndex = 1; }
                    @foreach (var item in Model.OrderByDescending(t => t.PowerRating))
                    {
                        <tr>
                            <td>
                                @powerIndex @{ powerIndex++; }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @{ double pf = Math.Round(item.Average20PointsFor, 2); }
                                @pf
                            </td>
                            <td>
                                @{ double blendedAverage = Math.Round(item.Average20PointsFor * 5, 2); }
                                @blendedAverage
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OffenseRating)
                            </td>
                            <td>
                                @{ double pr = Math.Round(item.PowerRating, 2); }
                                @pr
                            </td>
                        </tr>
                    }
                </table>
            </div>*@

            <div class="tab-pane" id="fourteenDay">
                <table class="table table-striped">
                    <tr>
                        <th>
                        </th>
                        <th>
                            Player
                        </th>
                        <th>
                            14 Day Score
                        </th>
                        <th>
                            Change
                        </th>
                    </tr>
                    @{ int index14 = 1; }
                    @foreach (var item in Model.OrderByDescending(t => t.OffenseRanking14))
                    {
                        <tr>
                            <td>
                                @index14 @{ index14++; }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OffenseRanking14)
                            </td>
                            <td class="@(item.OffenseRanking28 >= item.OffenseRanking14 ? "text-danger" : "text-success")">
                                @Math.Round(item.OffenseRanking14 - item.OffenseRanking28, 2)
                            </td>
                        </tr>
                    }
                </table>
            </div>

            <div class="tab-pane" id="twentyEightDay">
                <table class="table table-striped">
                    <tr>
                        <th>
                        </th>
                        <th>
                            Player
                        </th>
                        <th>
                            28 Day Score
                        </th>
                        <th>
                            Change
                        </th>
                    </tr>
                    @{ int index28 = 1; }
                    @foreach (var item in Model.OrderByDescending(t => t.OffenseRanking28))
                    {
                        <tr>
                            <td>
                                @index28 @{ index28++; }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OffenseRanking28)
                            </td>
                            <td class="@(item.OffenseRanking35 >= item.OffenseRanking28 ? "text-danger" : "text-success")">
                                @Math.Round(item.OffenseRanking28 - item.OffenseRanking35, 2)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>
